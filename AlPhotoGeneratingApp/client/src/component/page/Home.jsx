import React,{useState,useEffect} from 'react'
import { Loader , Card , FormField } from "../index"


const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return (
      data.map((post) => <Card key={post._id} {...post} />)
    );
  }

  return (
    <h2 className="mt-5 font-bold text-[#6469ff] text-xl uppercase">{title}</h2>
  );
};

/* 
  Rendering : fetching from server
  method :  micicng the fetcing once then using localCach method  

*/

const Home = () => {
  const [loading , setLoading ] = useState(false)
  const [allPosts, setAllPosts ] = useState(null)
  const [searchText,setSearchText ] = useState("")

  const [ searchedResults, setSearchedResults] = useState(null);
  const [ searchTimeout , setSearchTimeout ] = useState(null)

   useEffect( () => {
    const fetchPosts = async () => {
      setLoading(true)

      try {
        const response = await fetch('http://localhost:8080/api/v1/post',{
          method:'GET',
          headers:{
            'Content-Type':'application/json',
          },
        })
        if(response.ok){
          const result = await response.json();
          
          setAllPosts(result.data.reverse());
        }
      } catch (error) {
        alert(error)
      }finally{
        setLoading(false)
      }
    }
    fetchPosts();
  },[]);

  /***  
    Search function 
    method  : take an input and itarate thorugh database
    method : filtering on lowerCase
    rules : time out will clear on new search

  ***/
  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout)
      setSearchText(e.target.value);

      setSearchTimeout(
       setTimeout(()  => {
          const searchResults = allPosts.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLowerCase()))

          setSearchedResults(searchResults)
      },500)
      );
  }

  return (
    <section className='max-w-7x1 mx-auto'>
      <div> 
          <h1 className='txt-primary'>The Community Showcase </h1>
          <p className='sm-txt'> Browse through Cool and visually stunning images generated by Dall-E AI </p>
      </div>

      <div className='mt-16' >
        <FormField 
        labelName="Search Post"
        type="text"
        name="text"
        placeholder="Search posts"
        value={searchText}
        handleChange={handleSearchChange}
        />
      </div>

      <div className='mt-16'>
        {loading ? (
          <div className='flex justify-center items-center'> 
            <Loader />
          </div>
        ): (<div>
            {searchText && (
              <h2 className='font-medium text-[#666e75]text-xl mb-3'>
                Showing result for <span className='text-[#222328]'>{searchText}
                </span>
              </h2>
            )}
            <div className='grid lg:grid-cols-4 smgrid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>

            {searchText ? (
                <RenderCards
                  data={searchedResults}
                  title="No Search Results Found"
                />
              ) : (
                <RenderCards
                  data={allPosts}
                  title="No Posts Yet"
                />
              )}
                
            </div>
         </div>)}
      </div>
    </section>
  )
}

export default Home